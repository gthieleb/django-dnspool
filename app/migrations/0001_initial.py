# Generated by Django 2.2.4 on 2019-08-30 18:23

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DnsPoolEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
            options={
                'verbose_name_plural': 'Dns PoolEntries',
            },
        ),
        migrations.CreateModel(
            name='Middleware',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('identifier', models.CharField(help_text='Identifier for this middleware', max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='SubnetParent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subnet_parents', to='app.SubnetParent', verbose_name='Subnet-Parent')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subnet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cidr', models.CharField(max_length=50, verbose_name='Name')),
                ('admin', models.BooleanField(default=False, help_text='Does the policy allows to use this subnet for administrative purpose', verbose_name='Admin Subnet')),
                ('middlewares', models.ManyToManyField(blank=True, help_text='Middlewares configured for this subnet', to='app.Middleware', verbose_name='Middlewares')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subnets', to='app.SubnetParent', verbose_name='Subnet-Parent')),
            ],
        ),
        migrations.CreateModel(
            name='DnsEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('address', models.GenericIPAddressField(help_text='The ip address of the name entry', verbose_name='IP-Address')),
                ('dnspoolentry', models.ForeignKey(blank=True, help_text='The DNS pool this entry belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dnsentries', to='app.DnsPoolEntry', verbose_name='DNS Pool Entry')),
                ('subnet', models.ForeignKey(help_text='The subnet this ip address belongs to.', on_delete=django.db.models.deletion.CASCADE, to='app.Subnet', verbose_name='Subnet')),
            ],
            options={
                'verbose_name': 'Dns Entry',
                'verbose_name_plural': 'Dns Entries',
            },
        ),
    ]
